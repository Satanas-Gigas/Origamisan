import json
import time
import openai
from tqdm import tqdm

openai.api_key = "your-openai-api-key"  # üîë –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π –∫–ª—é—á

INPUT_FILE = "words_n2.json"
OUTPUT_FILE = "words_n2_translated.json"

MAX_RETRIES = 3
DELAY = 1.5  # –°–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def translate_with_gpt(text):
    """–ü–µ—Ä–µ–≤–æ–¥ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —á–µ—Ä–µ–∑ OpenAI GPT."""
    prompt = f"–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ —Å–ª–µ–¥—É—é—â—É—é –∞–Ω–≥–ª–∏–π—Å–∫—É—é —Ñ—Ä–∞–∑—É:\n{text}"
    for attempt in range(1, MAX_RETRIES + 1):
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",  # –∏–ª–∏ gpt-4 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                messages=[
                    {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.3,
            )
            return response.choices[0].message.content.strip()
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ '{text}' (–ø–æ–ø—ã—Ç–∫–∞ {attempt}): {e}")
            time.sleep(DELAY * attempt)
    return ""

def main():
    with open(INPUT_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)

    for word in tqdm(data, desc="üåê –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π"):
        if "translate_ru" not in word or not word["translate_ru"]:
            en_text = word.get("translate_en", "").strip()
            if en_text:
                ru_text = translate_with_gpt(en_text)
                word["translate_ru"] = ru_text
                time.sleep(DELAY)

    with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

    print(f"\n‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≤–µ—Ä—à—ë–Ω. –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {OUTPUT_FILE}")

if __name__ == "__main__":
    main()
