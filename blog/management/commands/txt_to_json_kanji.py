from django.core.management.base import BaseCommand
import json


class Command(BaseCommand):
    help = "üìÑ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç kanji_n3.txt –≤ kanji_n3.json"

    def handle(self, *args, **options):
        INPUT_FILE = "kanji_n3.txt"
        OUTPUT_FILE = "kanji_n3.json"

        kanji_list = []

        try:
            with open(INPUT_FILE, "r", encoding="utf-8") as file:
                lines = file.readlines()
        except FileNotFoundError:
            self.stderr.write(f"‚ùå –§–∞–π–ª '{INPUT_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        i = 0
        while i < len(lines):
            line = lines[i].strip()
            if not line:
                i += 1
                continue

            if '\t' not in line:
                self.stderr.write(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {i}: –Ω–µ—Ç —Ç–∞–±—É–ª—è—Ü–∏–∏ -> '{line}'")
                i += 1
                continue

            try:
                kanji, meaning_ru = line.split('\t', 1)
                onyomi = lines[i + 1].strip()
                kunyomi = lines[i + 2].strip()
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ (–ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –ø—Ä–æ—á–µ–µ)
                i += 6
            except Exception as e:
                self.stderr.write(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i}: {e}")
                i += 1
                continue

            kanji_entry = {
                "kanji": kanji,
                "onyomi": onyomi,
                "kunyomi": kunyomi,
                "meaning_ru": meaning_ru,
                "meaning_en": ""
            }

            kanji_list.append(kanji_entry)

        with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
            json.dump(kanji_list, f, ensure_ascii=False, indent=4)

        self.stdout.write(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {OUTPUT_FILE}")
        self.stdout.write(f"üìä –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(kanji_list)} –∑–∞–ø–∏—Å–µ–π")
