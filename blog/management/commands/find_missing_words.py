import csv
from django.core.management.base import BaseCommand
from blog.models import Word
from tqdm import tqdm

class Command(BaseCommand):
    help = '–ù–∞—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫–∏ –∏–∑ CSV, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Word (level=3)'

    def handle(self, *args, **options):
        missing = []

        with open('words_with_ru_n3.csv', newline='', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile, delimiter=';')
            rows = list(reader)

        self.stdout.write(f"üîç –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º {len(rows)} —Å—Ç—Ä–æ–∫ –∏–∑ CSV —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")

        for row in tqdm(rows, desc="üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π"):
            kanji = row['Kanji'].strip()
            kana = row['Kana'].strip()
            romaji = row['Romaji'].strip()

            # –ò—â–µ–º –ø–æ kanji –∏ kana –∏ —É—Ä–æ–≤–Ω—é
            match = Word.objects.filter(
                kanji=kanji if kanji else None,
                kana=kana if kana else None,
                romaji=romaji if romaji else None,
                level="3"
            ).exists()

            if not match:
                missing.append(row)

        self.stdout.write(f"\n‚ùå –ù–∞–π–¥–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–ª–æ–≤: {len(missing)}\n")

        for row in missing:
            self.stdout.write(
                f"{row['Kanji']} | {row['Kana']} | {row['Romaji']} | {row['Translation']} | {row['Translation RU']}"
            )
