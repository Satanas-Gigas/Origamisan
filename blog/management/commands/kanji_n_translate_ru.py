import json
import time
from tqdm import tqdm
from googletrans import Translator
from django.core.management.base import BaseCommand

class Command(BaseCommand):
    help = "üì• –ü–µ—Ä–µ–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª—è meaning_en –≤ —Ñ–∞–π–ª–µ —Å –∫–∞–Ω–¥–∑–∏ (parse_kanji_n5.json) –Ω–∞ —Ä—É—Å—Å–∫–∏–π —á–µ—Ä–µ–∑ Google Translate —Å –∞–≤—Ç–æ–ø–æ–≤—Ç–æ—Ä–æ–º –∏ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º"

    def handle(self, *args, **options):
        INPUT_FILE = "parse_kanji_n5.json"
        OUTPUT_FILE = "parse_kanji_n5_translated_ru.json"
        SAVE_EVERY = 50  # —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 50 —Å—Ç—Ä–æ–∫
        RETRIES = 5

        translator = Translator()
        with open(INPUT_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)

        translated_count = 0
        skipped_count = 0

        for i, kanji in enumerate(tqdm(data, desc="üåç –ü–µ—Ä–µ–≤–æ–¥")):
            en = kanji.get("meaning_en", "").strip()
            if en and not kanji.get("meaning_ru"):
                success = False
                for attempt in range(RETRIES):
                    try:
                        ru = translator.translate(en, src="en", dest="ru").text
                        kanji["meaning_ru"] = ru
                        translated_count += 1
                        time.sleep(0.7)
                        success = True
                        break  # —É—Å–ø–µ—Ö
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ '{en}' (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}): {e}")
                        time.sleep(7 + attempt * 7)  # –∑–∞–¥–µ—Ä–∂–∫–∞
                if not success:
                    kanji["meaning_ru"] = ""
                    skipped_count += 1
            else:
                skipped_count += 1

            if (i+1) % SAVE_EVERY == 0:
                with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
                    json.dump(data, f, ensure_ascii=False, indent=4)
                print(f"üíæ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω ({i+1} –∏–∑ {len(data)})")

        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

        self.stdout.write(self.style.SUCCESS(f"‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≤–µ—Ä—à—ë–Ω. –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {OUTPUT_FILE}"))
        self.stdout.write(self.style.SUCCESS(f"üåü –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: {translated_count}"))
        self.stdout.write(self.style.WARNING(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}"))
