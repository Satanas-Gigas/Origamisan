import os
import csv
import requests
import time

INPUT_FILE = "word_n3_merged.csv"
OUTPUT_FILE = "word_n3_merged_with_kana_pos.csv"

def get_kana_from_jisho(kanji):
    try:
        url = f"https://jisho.org/api/v1/search/words?keyword={kanji}"
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            json_data = response.json()
            if json_data["data"]:
                for entry in json_data["data"]:
                    for jp in entry.get("japanese", []):
                        if "reading" in jp:
                            return jp["reading"]
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ kana –¥–ª—è {kanji}: {e}")
    return ""

def get_part_of_speech(kanji):
    try:
        url = f"https://jisho.org/api/v1/search/words?keyword={kanji}"
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            json_data = response.json()
            if json_data["data"]:
                senses = json_data["data"][0].get("senses", [])
                if senses and "parts_of_speech" in senses[0]:
                    return ", ".join(senses[0]["parts_of_speech"])
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Å—Ç–∏ —Ä–µ—á–∏ –¥–ª—è '{kanji}': {e}")
    return ""

def process_file(input_file, output_file):
    with open(input_file, encoding="utf-8") as f:
        reader = csv.reader(f, delimiter=";")
        rows = list(reader)

    header = rows[0]
    data_rows = rows[1:]

    # –î–æ–±–∞–≤–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Å—Ç–∏ —Ä–µ—á–∏
    updated_rows = [["Kanji", "Kana", "Romaji", "Translation", "Part of Speech"]]

    for i, row in enumerate(data_rows, 1):
        if len(row) < 3:
            continue
        kanji = row[0].strip()
        kana = row[1].strip()
        romaji = row[2].strip()
        translation = ";".join(row[3:]).strip()

        if not kana:
            print(f"[{i}/{len(data_rows)}] üî§ –ü–æ–ª—É—á–∞–µ–º kana –¥–ª—è: {kanji}")
            kana = get_kana_from_jisho(kanji)
            time.sleep(1)

        print(f"[{i}/{len(data_rows)}] üìö –ü–æ–ª—É—á–∞–µ–º —á–∞—Å—Ç—å —Ä–µ—á–∏ –¥–ª—è: {kanji}")
        part_of_speech = get_part_of_speech(kanji)
        time.sleep(1)

        updated_rows.append([kanji, kana, romaji, translation, part_of_speech])

    with open(output_file, mode="w", encoding="utf-8", newline="") as f:
        writer = csv.writer(f, delimiter=";", quoting=csv.QUOTE_NONE, escapechar="\\")
        writer.writerows(updated_rows)

    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª: {output_file}")

if __name__ == "__main__":
    process_file(INPUT_FILE, OUTPUT_FILE)

    output_path = os.path.abspath(OUTPUT_FILE)
    print(f"üìÅ –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: {output_path}")

    if os.path.exists(output_path):
        print("üì¶ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–ª—å—à–µ.")
    else:
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")